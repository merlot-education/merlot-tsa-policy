# -- Default number of instances to start 
replicaCount: 1
# -- Application name
name: policy
# -- Ovverwrites application name
nameOverride: ""

image:
  repository: registry.gitlab.com/gaia-x/data-infrastructure-federation-services/tsa
  # -- Image name
  name: policy
  # -- Image tag
  # Uses .Chart.AppVersion if empty
  tag: ""
  # -- Image sha, usually generated by the CI
  # Uses image.tag if empty
  sha: ""
  # -- Image pull policy
  pullPolicy: IfNotPresent
  # -- Image pull secret when internal image is used
  pullSecrets: deployment-key-light


podAnnotations: {}
##
## Pass extra environment variables to the container.
##
# extraVars:
# - name: EXTRA_VAR_1
#   value: extra-var-value-1
# - name: EXTRA_VAR_2
#   value: extra-var-value-2
##
## Create new service when true, and use the specified uner name when set to the name specified
##

resources:
  requests:
    cpu: 25m
    memory: 64Mi
  limits:
    cpu: 150m
    memory: 128Mi

## Configure pod autoscaling
##

autoscaling:
  # -- Enable autoscaling
  enabled: false
  # -- Minimum replicas
  minReplicas: 1
  # -- Maximum replicas
  maxReplicas: 3
  # -- CPU target for autoscaling trigger
  targetCPUUtilizationPercentage: 70
  # -- Memory target for autoscaling trigger
  targetMemoryUtilizationPercentage: 70
##
## Prometheus Exporter / Metrics
##

metrics:
  # -- Enable prometheus metrics
  enabled: true
  # -- Port for prometheus metrics
  port: 2112

log:
  level: "debug"
  encoding: json

##
## Kubernetes [SecurityContext](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/) object.
##

security:
  # -- by default, apps run as non-root
  runAsNonRoot: false
  # -- User used by the apps
  runAsUid: 0
  # -- Group used by the apps
  runAsGid: 0
##
##
service:
  port: 8080

policy:
  nats:
    url: nats
    subject: external
  http:
    host: ""
    port: 8080
    timeout:
      idle: 120s
      read: 10s
      write: 10s

mongo:
  addr: "mongodb://mongodb-mongodb-replicaset.infra:27017/policy?replicaSet=rs0&authSource=admin"
  user: ""
  pass: ""
  dbname: policy
  collection: policies

addresses:
  cache: http://cache:8080
  task: http://task:8080
  didResolver: http://didresolver:8080
  signer: http://signer:8080
  ocm: https://gaiax.vereign.com/ocm

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$2
  tlsEnabled: true
  frontendDomain: gaiax.vereign.com
  frontendTlsSecretName: cert-manager-tls
