openapi: 3.0.3
info:
    title: Policy Service
    description: The policy service exposes HTTP API for executing policies.
    version: "1.0"
servers:
    - url: http://localhost:8081
      description: Policy Server
paths:
    /liveness:
        get:
            tags:
                - health
            summary: Liveness health
            operationId: health#Liveness
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HealthResponse'
                            example:
                                service: Qui et sit maiores architecto alias.
                                status: Nesciunt labore voluptatibus.
                                version: Quia et deserunt expedita facilis maiores.
    /policy/{repository}/{group}/{policyName}/{version}/evaluation:
        get:
            tags:
                - policy
            summary: Evaluate policy
            description: Evaluate executes a policy with the given 'data' as input.
            operationId: policy#Evaluate#1
            parameters:
                - name: repository
                  in: path
                  description: Policy repository.
                  required: true
                  schema:
                    type: string
                    description: Policy repository.
                    example: policies
                  example: policies
                - name: group
                  in: path
                  description: Policy group.
                  required: true
                  schema:
                    type: string
                    description: Policy group.
                    example: example
                  example: example
                - name: policyName
                  in: path
                  description: Policy name.
                  required: true
                  schema:
                    type: string
                    description: Policy name.
                    example: example
                  example: example
                - name: version
                  in: path
                  description: Policy version.
                  required: true
                  schema:
                    type: string
                    description: Policy version.
                    example: "1.0"
                  example: "1.0"
                - name: x-evaluation-id
                  in: header
                  description: EvaluationID allows overwriting the randomly generated evaluationID
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: EvaluationID allows overwriting the randomly generated evaluationID
                    example: did:web:example.com
                  example: did:web:example.com
                - name: x-cache-ttl
                  in: header
                  description: Policy result cache TTL in seconds
                  allowEmptyValue: true
                  schema:
                    type: integer
                    description: Policy result cache TTL in seconds
                    example: 60
                    format: int64
                  example: 60
            requestBody:
                description: Input data passed to the policy execution runtime.
                required: true
                content:
                    application/json:
                        schema:
                            type: string
                            description: Input data passed to the policy execution runtime.
                            example: In ab sed excepturi.
                            format: binary
                        example: A voluptatem consectetur cum porro optio saepe.
            responses:
                "200":
                    description: OK response.
                    headers:
                        ETag:
                            description: ETag contains unique identifier of the policy evaluation and can be used to later retrieve the results from Cache.
                            schema:
                                type: string
                                description: ETag contains unique identifier of the policy evaluation and can be used to later retrieve the results from Cache.
                                example: Assumenda voluptatum adipisci nisi quam.
                            example: Ut saepe vel qui pariatur.
                    content:
                        application/json:
                            schema:
                                type: string
                                description: Arbitrary JSON response.
                                example: Aut vero quidem non et ut nihil.
                                format: binary
                            example: Doloremque unde et provident qui voluptas ut.
        post:
            tags:
                - policy
            summary: Evaluate policy
            description: Evaluate executes a policy with the given 'data' as input.
            operationId: policy#Evaluate#2
            parameters:
                - name: repository
                  in: path
                  description: Policy repository.
                  required: true
                  schema:
                    type: string
                    description: Policy repository.
                    example: policies
                  example: policies
                - name: group
                  in: path
                  description: Policy group.
                  required: true
                  schema:
                    type: string
                    description: Policy group.
                    example: example
                  example: example
                - name: policyName
                  in: path
                  description: Policy name.
                  required: true
                  schema:
                    type: string
                    description: Policy name.
                    example: example
                  example: example
                - name: version
                  in: path
                  description: Policy version.
                  required: true
                  schema:
                    type: string
                    description: Policy version.
                    example: "1.0"
                  example: "1.0"
                - name: x-evaluation-id
                  in: header
                  description: EvaluationID allows overwriting the randomly generated evaluationID
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: EvaluationID allows overwriting the randomly generated evaluationID
                    example: did:web:example.com
                  example: did:web:example.com
                - name: x-cache-ttl
                  in: header
                  description: Policy result cache TTL in seconds
                  allowEmptyValue: true
                  schema:
                    type: integer
                    description: Policy result cache TTL in seconds
                    example: 60
                    format: int64
                  example: 60
            requestBody:
                description: Input data passed to the policy execution runtime.
                required: true
                content:
                    application/json:
                        schema:
                            type: string
                            description: Input data passed to the policy execution runtime.
                            example: In ab sed excepturi.
                            format: binary
                        example: Delectus repellendus nulla assumenda ab omnis.
            responses:
                "200":
                    description: OK response.
                    headers:
                        ETag:
                            description: ETag contains unique identifier of the policy evaluation and can be used to later retrieve the results from Cache.
                            schema:
                                type: string
                                description: ETag contains unique identifier of the policy evaluation and can be used to later retrieve the results from Cache.
                                example: Consequatur officia illum itaque.
                            example: Qui ea odio asperiores perspiciatis soluta amet.
                    content:
                        application/json:
                            schema:
                                type: string
                                description: Arbitrary JSON response.
                                example: Aut vero quidem non et ut nihil.
                                format: binary
                            example: Voluptate porro voluptatem doloribus deleniti ex.
    /policy/{repository}/{group}/{policyName}/{version}/evaluation/did.json:
        get:
            tags:
                - policy
            summary: Evaluate policy
            description: Evaluate executes a policy with the given 'data' as input.
            operationId: policy#Evaluate
            parameters:
                - name: repository
                  in: path
                  description: Policy repository.
                  required: true
                  schema:
                    type: string
                    description: Policy repository.
                    example: policies
                  example: policies
                - name: group
                  in: path
                  description: Policy group.
                  required: true
                  schema:
                    type: string
                    description: Policy group.
                    example: example
                  example: example
                - name: policyName
                  in: path
                  description: Policy name.
                  required: true
                  schema:
                    type: string
                    description: Policy name.
                    example: example
                  example: example
                - name: version
                  in: path
                  description: Policy version.
                  required: true
                  schema:
                    type: string
                    description: Policy version.
                    example: "1.0"
                  example: "1.0"
                - name: x-evaluation-id
                  in: header
                  description: EvaluationID allows overwriting the randomly generated evaluationID
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: EvaluationID allows overwriting the randomly generated evaluationID
                    example: did:web:example.com
                  example: did:web:example.com
                - name: x-cache-ttl
                  in: header
                  description: Policy result cache TTL in seconds
                  allowEmptyValue: true
                  schema:
                    type: integer
                    description: Policy result cache TTL in seconds
                    example: 60
                    format: int64
                  example: 60
            requestBody:
                description: Input data passed to the policy execution runtime.
                required: true
                content:
                    application/json:
                        schema:
                            type: string
                            description: Input data passed to the policy execution runtime.
                            example: In ab sed excepturi.
                            format: binary
                        example: Provident aut itaque voluptates.
            responses:
                "200":
                    description: OK response.
                    headers:
                        ETag:
                            description: ETag contains unique identifier of the policy evaluation and can be used to later retrieve the results from Cache.
                            schema:
                                type: string
                                description: ETag contains unique identifier of the policy evaluation and can be used to later retrieve the results from Cache.
                                example: Accusantium ea ipsam molestiae et soluta aut.
                            example: Recusandae nisi quia.
                    content:
                        application/json:
                            schema:
                                type: string
                                description: Arbitrary JSON response.
                                example: Aut vero quidem non et ut nihil.
                                format: binary
                            example: Sed quia odio et tenetur.
    /policy/{repository}/{group}/{policyName}/{version}/export:
        get:
            tags:
                - policy
            summary: ExportBundle policy
            description: Export a signed policy bundle.
            operationId: policy#ExportBundle
            parameters:
                - name: repository
                  in: path
                  description: Policy repository.
                  required: true
                  schema:
                    type: string
                    description: Policy repository.
                    example: policies
                  example: policies
                - name: group
                  in: path
                  description: Policy group.
                  required: true
                  schema:
                    type: string
                    description: Policy group.
                    example: example
                  example: example
                - name: policyName
                  in: path
                  description: Policy name.
                  required: true
                  schema:
                    type: string
                    description: Policy name.
                    example: returnDID
                  example: returnDID
                - name: version
                  in: path
                  description: Policy version.
                  required: true
                  schema:
                    type: string
                    description: Policy version.
                    example: "1.0"
                  example: "1.0"
            responses:
                "200":
                    description: OK response.
                    headers:
                        content-disposition:
                            description: Content-Disposition response header containing the name of the file.
                            schema:
                                type: string
                                description: Content-Disposition response header containing the name of the file.
                                example: Porro ut.
                            example: Omnis iure a laudantium ex.
                        content-length:
                            description: Content-Length response header.
                            schema:
                                type: integer
                                description: Content-Length response header.
                                example: 6221848690578715993
                                format: int64
                            example: 4997680375152524446
                        content-type:
                            description: Content-Type response header.
                            schema:
                                type: string
                                description: Content-Type response header.
                                example: Sed rerum aut itaque magnam.
                            example: Autem corrupti ea.
                    content:
                        application/json:
                            schema:
                                type: string
                                format: binary
    /policy/{repository}/{group}/{policyName}/{version}/key:
        get:
            tags:
                - policy
            summary: PolicyPublicKey policy
            description: PolicyPublicKey returns the public key in JWK format which must be used to verify a signed policy bundle.
            operationId: policy#PolicyPublicKey
            parameters:
                - name: repository
                  in: path
                  description: Policy repository.
                  required: true
                  schema:
                    type: string
                    description: Policy repository.
                    example: policies
                  example: policies
                - name: group
                  in: path
                  description: Policy group.
                  required: true
                  schema:
                    type: string
                    description: Policy group.
                    example: example
                  example: example
                - name: policyName
                  in: path
                  description: Policy name.
                  required: true
                  schema:
                    type: string
                    description: Policy name.
                    example: returnDID
                  example: returnDID
                - name: version
                  in: path
                  description: Policy version.
                  required: true
                  schema:
                    type: string
                    description: Policy version.
                    example: "1.0"
                  example: "1.0"
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Autem aut et recusandae et.
                                format: binary
                            example: Eos consequatur veniam porro quis ad rerum.
    /policy/{repository}/{group}/{policyName}/{version}/lock:
        delete:
            tags:
                - policy
            summary: Unlock policy
            description: Unlock a policy so it can be evaluated again.
            operationId: policy#Unlock
            parameters:
                - name: repository
                  in: path
                  description: Policy repository.
                  required: true
                  schema:
                    type: string
                    description: Policy repository.
                    example: Esse unde natus rem mollitia adipisci.
                  example: Atque excepturi aperiam impedit et sapiente.
                - name: group
                  in: path
                  description: Policy group.
                  required: true
                  schema:
                    type: string
                    description: Policy group.
                    example: Porro enim assumenda qui nesciunt.
                  example: Animi perspiciatis et.
                - name: policyName
                  in: path
                  description: Policy name.
                  required: true
                  schema:
                    type: string
                    description: Policy name.
                    example: Qui qui provident deserunt non in sint.
                  example: Eligendi voluptatem sit provident consequatur.
                - name: version
                  in: path
                  description: Policy version.
                  required: true
                  schema:
                    type: string
                    description: Policy version.
                    example: At in accusamus quaerat ut sit laboriosam.
                  example: Distinctio debitis qui quos rerum consequatur.
            responses:
                "200":
                    description: OK response.
        post:
            tags:
                - policy
            summary: Lock policy
            description: Lock a policy so that it cannot be evaluated.
            operationId: policy#Lock
            parameters:
                - name: repository
                  in: path
                  description: Policy repository.
                  required: true
                  schema:
                    type: string
                    description: Policy repository.
                    example: Sed consequatur voluptas perspiciatis et.
                  example: Beatae quidem accusantium velit qui tenetur.
                - name: group
                  in: path
                  description: Policy group.
                  required: true
                  schema:
                    type: string
                    description: Policy group.
                    example: Porro occaecati deleniti.
                  example: Fugit voluptates voluptatum dolores id.
                - name: policyName
                  in: path
                  description: Policy name.
                  required: true
                  schema:
                    type: string
                    description: Policy name.
                    example: Sit nihil tempora.
                  example: Cumque voluptatem dolore eos maiores.
                - name: version
                  in: path
                  description: Policy version.
                  required: true
                  schema:
                    type: string
                    description: Policy version.
                    example: Doloremque id distinctio exercitationem quis.
                  example: Hic ut quis velit cumque ipsum dolorem.
            responses:
                "200":
                    description: OK response.
    /policy/{repository}/{group}/{policyName}/{version}/notifychange:
        post:
            tags:
                - policy
            summary: SubscribeForPolicyChange policy
            description: Subscribe for policy change notifications by registering webhook callbacks which the policy service will call.
            operationId: policy#SubscribeForPolicyChange
            parameters:
                - name: repository
                  in: path
                  description: Policy repository.
                  required: true
                  schema:
                    type: string
                    description: Policy repository.
                    example: Dignissimos est accusamus ipsam.
                  example: Veniam quis.
                - name: group
                  in: path
                  description: Policy group.
                  required: true
                  schema:
                    type: string
                    description: Policy group.
                    example: Ipsum velit occaecati asperiores soluta deserunt.
                  example: Aspernatur ea et cupiditate necessitatibus eveniet.
                - name: policyName
                  in: path
                  description: Policy name.
                  required: true
                  schema:
                    type: string
                    description: Policy name.
                    example: Sed alias omnis repudiandae vero sapiente.
                  example: Nemo unde dolorem hic mollitia itaque.
                - name: version
                  in: path
                  description: Policy version.
                  required: true
                  schema:
                    type: string
                    description: Policy version.
                    example: Architecto voluptatem magnam.
                  example: Explicabo a aliquid eum.
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SubscribeForPolicyChangeRequestBody'
                        example:
                            subscriber: bsm
                            webhook_url: http://yundt.org/bart
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Magnam natus similique autem aut.
                                format: binary
                            example: Eum sed optio.
    /policy/{repository}/{group}/{policyName}/{version}/validation:
        get:
            tags:
                - policy
            summary: Validate policy
            description: Validate executes a policy with the given 'data' as input and validates the output schema.
            operationId: policy#Validate#1
            parameters:
                - name: repository
                  in: path
                  description: Policy repository.
                  required: true
                  schema:
                    type: string
                    description: Policy repository.
                    example: policies
                  example: policies
                - name: group
                  in: path
                  description: Policy group.
                  required: true
                  schema:
                    type: string
                    description: Policy group.
                    example: example
                  example: example
                - name: policyName
                  in: path
                  description: Policy name.
                  required: true
                  schema:
                    type: string
                    description: Policy name.
                    example: example
                  example: example
                - name: version
                  in: path
                  description: Policy version.
                  required: true
                  schema:
                    type: string
                    description: Policy version.
                    example: "1.0"
                  example: "1.0"
                - name: x-evaluation-id
                  in: header
                  description: EvaluationID allows overwriting the randomly generated evaluationID
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: EvaluationID allows overwriting the randomly generated evaluationID
                    example: did:web:example.com
                  example: did:web:example.com
                - name: x-cache-ttl
                  in: header
                  description: Policy result cache TTL in seconds
                  allowEmptyValue: true
                  schema:
                    type: integer
                    description: Policy result cache TTL in seconds
                    example: 60
                    format: int64
                  example: 60
            requestBody:
                description: Input data passed to the policy execution runtime.
                required: true
                content:
                    application/json:
                        schema:
                            type: string
                            description: Input data passed to the policy execution runtime.
                            example: Consequuntur sunt autem est ipsa veritatis hic.
                            format: binary
                        example: Illo nulla nulla.
            responses:
                "200":
                    description: OK response.
                    headers:
                        ETag:
                            description: ETag contains unique identifier of the policy evaluation and can be used to later retrieve the results from Cache.
                            schema:
                                type: string
                                description: ETag contains unique identifier of the policy evaluation and can be used to later retrieve the results from Cache.
                                example: Labore temporibus.
                            example: Ut tempora et itaque.
                    content:
                        application/json:
                            schema:
                                type: string
                                description: Arbitrary JSON response.
                                example: Aperiam nihil sint nostrum.
                                format: binary
                            example: Sunt autem provident error.
        post:
            tags:
                - policy
            summary: Validate policy
            description: Validate executes a policy with the given 'data' as input and validates the output schema.
            operationId: policy#Validate#2
            parameters:
                - name: repository
                  in: path
                  description: Policy repository.
                  required: true
                  schema:
                    type: string
                    description: Policy repository.
                    example: policies
                  example: policies
                - name: group
                  in: path
                  description: Policy group.
                  required: true
                  schema:
                    type: string
                    description: Policy group.
                    example: example
                  example: example
                - name: policyName
                  in: path
                  description: Policy name.
                  required: true
                  schema:
                    type: string
                    description: Policy name.
                    example: example
                  example: example
                - name: version
                  in: path
                  description: Policy version.
                  required: true
                  schema:
                    type: string
                    description: Policy version.
                    example: "1.0"
                  example: "1.0"
                - name: x-evaluation-id
                  in: header
                  description: EvaluationID allows overwriting the randomly generated evaluationID
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: EvaluationID allows overwriting the randomly generated evaluationID
                    example: did:web:example.com
                  example: did:web:example.com
                - name: x-cache-ttl
                  in: header
                  description: Policy result cache TTL in seconds
                  allowEmptyValue: true
                  schema:
                    type: integer
                    description: Policy result cache TTL in seconds
                    example: 60
                    format: int64
                  example: 60
            requestBody:
                description: Input data passed to the policy execution runtime.
                required: true
                content:
                    application/json:
                        schema:
                            type: string
                            description: Input data passed to the policy execution runtime.
                            example: Consequuntur sunt autem est ipsa veritatis hic.
                            format: binary
                        example: Aut voluptatum et deserunt libero velit.
            responses:
                "200":
                    description: OK response.
                    headers:
                        ETag:
                            description: ETag contains unique identifier of the policy evaluation and can be used to later retrieve the results from Cache.
                            schema:
                                type: string
                                description: ETag contains unique identifier of the policy evaluation and can be used to later retrieve the results from Cache.
                                example: Molestiae eos.
                            example: Temporibus possimus mollitia eum aut id.
                    content:
                        application/json:
                            schema:
                                type: string
                                description: Arbitrary JSON response.
                                example: Aperiam nihil sint nostrum.
                                format: binary
                            example: Hic iusto accusamus et modi.
    /policy/{repository}/{group}/{policyName}/{version}/validation/did.json:
        get:
            tags:
                - policy
            summary: Validate policy
            description: Validate executes a policy with the given 'data' as input and validates the output schema.
            operationId: policy#Validate
            parameters:
                - name: repository
                  in: path
                  description: Policy repository.
                  required: true
                  schema:
                    type: string
                    description: Policy repository.
                    example: policies
                  example: policies
                - name: group
                  in: path
                  description: Policy group.
                  required: true
                  schema:
                    type: string
                    description: Policy group.
                    example: example
                  example: example
                - name: policyName
                  in: path
                  description: Policy name.
                  required: true
                  schema:
                    type: string
                    description: Policy name.
                    example: example
                  example: example
                - name: version
                  in: path
                  description: Policy version.
                  required: true
                  schema:
                    type: string
                    description: Policy version.
                    example: "1.0"
                  example: "1.0"
                - name: x-evaluation-id
                  in: header
                  description: EvaluationID allows overwriting the randomly generated evaluationID
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: EvaluationID allows overwriting the randomly generated evaluationID
                    example: did:web:example.com
                  example: did:web:example.com
                - name: x-cache-ttl
                  in: header
                  description: Policy result cache TTL in seconds
                  allowEmptyValue: true
                  schema:
                    type: integer
                    description: Policy result cache TTL in seconds
                    example: 60
                    format: int64
                  example: 60
            requestBody:
                description: Input data passed to the policy execution runtime.
                required: true
                content:
                    application/json:
                        schema:
                            type: string
                            description: Input data passed to the policy execution runtime.
                            example: Consequuntur sunt autem est ipsa veritatis hic.
                            format: binary
                        example: Id quis voluptas id pariatur aut.
            responses:
                "200":
                    description: OK response.
                    headers:
                        ETag:
                            description: ETag contains unique identifier of the policy evaluation and can be used to later retrieve the results from Cache.
                            schema:
                                type: string
                                description: ETag contains unique identifier of the policy evaluation and can be used to later retrieve the results from Cache.
                                example: Ab pariatur dolor sed harum.
                            example: Cupiditate fugit sint autem voluptatem qui reiciendis.
                    content:
                        application/json:
                            schema:
                                type: string
                                description: Arbitrary JSON response.
                                example: Aperiam nihil sint nostrum.
                                format: binary
                            example: Sunt dolor.
    /readiness:
        get:
            tags:
                - health
            summary: Readiness health
            operationId: health#Readiness
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HealthResponse'
                            example:
                                service: Quos autem aut in est.
                                status: Iusto porro rerum qui.
                                version: Quis qui perferendis provident corrupti rerum exercitationem.
    /v1/policies:
        get:
            tags:
                - policy
            summary: ListPolicies policy
            description: List policies from storage with optional filters.
            operationId: policy#ListPolicies
            parameters:
                - name: locked
                  in: query
                  description: Filter to return locked/unlocked policies (optional).
                  allowEmptyValue: true
                  schema:
                    type: boolean
                    description: Filter to return locked/unlocked policies (optional).
                    example: false
                  example: false
                - name: policyName
                  in: query
                  description: Filter to return policies (optional).
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: Filter to return policies (optional).
                    example: example
                  example: example
                - name: rego
                  in: query
                  description: Include policy source code in results (optional).
                  allowEmptyValue: true
                  schema:
                    type: boolean
                    description: Include policy source code in results (optional).
                    example: true
                  example: false
                - name: data
                  in: query
                  description: 'Include policy static data in results (optional). '
                  allowEmptyValue: true
                  schema:
                    type: boolean
                    description: 'Include policy static data in results (optional). '
                    example: false
                  example: false
                - name: dataConfig
                  in: query
                  description: Include static data config (optional).
                  allowEmptyValue: true
                  schema:
                    type: boolean
                    description: Include static data config (optional).
                    example: false
                  example: true
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PoliciesResult'
                            example:
                                policies:
                                    - data: Enim adipisci error et sunt maxime aperiam.
                                      dataConfig: Et sit qui fugit enim labore.
                                      group: Deserunt voluptatem.
                                      lastUpdate: 1267958255738368405
                                      locked: false
                                      policyName: Laborum voluptas dolorem aut accusantium in dolor.
                                      rego: Possimus eveniet cupiditate qui quo tenetur.
                                      repository: Qui optio nobis iure rerum non cumque.
                                      version: Voluptates sed ea et ad.
                                    - data: Enim adipisci error et sunt maxime aperiam.
                                      dataConfig: Et sit qui fugit enim labore.
                                      group: Deserunt voluptatem.
                                      lastUpdate: 1267958255738368405
                                      locked: false
                                      policyName: Laborum voluptas dolorem aut accusantium in dolor.
                                      rego: Possimus eveniet cupiditate qui quo tenetur.
                                      repository: Qui optio nobis iure rerum non cumque.
                                      version: Voluptates sed ea et ad.
                                    - data: Enim adipisci error et sunt maxime aperiam.
                                      dataConfig: Et sit qui fugit enim labore.
                                      group: Deserunt voluptatem.
                                      lastUpdate: 1267958255738368405
                                      locked: false
                                      policyName: Laborum voluptas dolorem aut accusantium in dolor.
                                      rego: Possimus eveniet cupiditate qui quo tenetur.
                                      repository: Qui optio nobis iure rerum non cumque.
                                      version: Voluptates sed ea et ad.
    /v1/policy/import:
        post:
            tags:
                - policy
            summary: ImportBundle policy
            description: Import a signed policy bundle.
            operationId: policy#ImportBundle
            parameters:
                - name: Content-Length
                  in: header
                  allowEmptyValue: true
                  schema:
                    type: integer
                    example: 2912963048591030259
                    format: int64
                  example: 8070642790474478021
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Impedit laudantium accusamus ut explicabo est.
                                format: binary
                            example: Quia tempore magni eius dolor quia ratione.
                "403":
                    description: Forbidden response.
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Qui ut amet autem.
                                format: binary
                            example: Aperiam qui.
                "500":
                    description: Internal Server Error response.
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Consequatur ut ullam.
                                format: binary
                            example: Excepturi tenetur.
    /v1/policy/import/config:
        delete:
            tags:
                - policy
            summary: DeletePolicyAutoImport policy
            description: DeletePolicyAutoImport removes a single automatic import configuration.
            operationId: policy#DeletePolicyAutoImport
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DeletePolicyAutoImportRequestBody'
                        example:
                            policyURL: http://harvey.info/mossie_wilkinson
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Et ullam facere consequatur.
                                format: binary
                            example: Consequatur blanditiis cumque et sunt.
        get:
            tags:
                - policy
            summary: PolicyAutoImport policy
            description: PolicyAutoImport returns all automatic import configurations.
            operationId: policy#PolicyAutoImport
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Rerum ratione.
                                format: binary
                            example: Qui reprehenderit harum a.
        post:
            tags:
                - policy
            summary: SetPolicyAutoImport policy
            description: SetPolicyAutoImport enables automatic import of policy bundle on a given time interval.
            operationId: policy#SetPolicyAutoImport
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetPolicyAutoImportRequestBody'
                        example:
                            interval: 1h30m
                            policyURL: http://altenwerthstrosin.info/ressie
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Quaerat architecto perferendis officiis eius dolorem sed.
                                format: binary
                            example: Aut voluptatem repudiandae aperiam.
components:
    schemas:
        DeletePolicyAutoImportRequestBody:
            type: object
            properties:
                policyURL:
                    type: string
                    description: PolicyURL defines the address from where a policy bundle will be taken.
                    example: http://davisfarrell.org/anabel.haag
                    format: uri
            example:
                policyURL: http://monahan.net/leonora_robel
            required:
                - policyURL
        HealthResponse:
            type: object
            properties:
                service:
                    type: string
                    description: Service name.
                    example: Eaque itaque laboriosam.
                status:
                    type: string
                    description: Status message.
                    example: Consequatur modi doloribus vel.
                version:
                    type: string
                    description: Service runtime version.
                    example: Non nihil quod rerum aliquam.
            example:
                service: Ut quod et iste consectetur voluptatem.
                status: Sit omnis.
                version: Vitae nesciunt voluptatem voluptatem.
            required:
                - service
                - status
                - version
        PoliciesResult:
            type: object
            properties:
                policies:
                    type: array
                    items:
                        $ref: '#/components/schemas/Policy'
                    description: JSON array of policies.
                    example:
                        - data: Enim adipisci error et sunt maxime aperiam.
                          dataConfig: Et sit qui fugit enim labore.
                          group: Deserunt voluptatem.
                          lastUpdate: 1267958255738368405
                          locked: false
                          policyName: Laborum voluptas dolorem aut accusantium in dolor.
                          rego: Possimus eveniet cupiditate qui quo tenetur.
                          repository: Qui optio nobis iure rerum non cumque.
                          version: Voluptates sed ea et ad.
                        - data: Enim adipisci error et sunt maxime aperiam.
                          dataConfig: Et sit qui fugit enim labore.
                          group: Deserunt voluptatem.
                          lastUpdate: 1267958255738368405
                          locked: false
                          policyName: Laborum voluptas dolorem aut accusantium in dolor.
                          rego: Possimus eveniet cupiditate qui quo tenetur.
                          repository: Qui optio nobis iure rerum non cumque.
                          version: Voluptates sed ea et ad.
                        - data: Enim adipisci error et sunt maxime aperiam.
                          dataConfig: Et sit qui fugit enim labore.
                          group: Deserunt voluptatem.
                          lastUpdate: 1267958255738368405
                          locked: false
                          policyName: Laborum voluptas dolorem aut accusantium in dolor.
                          rego: Possimus eveniet cupiditate qui quo tenetur.
                          repository: Qui optio nobis iure rerum non cumque.
                          version: Voluptates sed ea et ad.
                        - data: Enim adipisci error et sunt maxime aperiam.
                          dataConfig: Et sit qui fugit enim labore.
                          group: Deserunt voluptatem.
                          lastUpdate: 1267958255738368405
                          locked: false
                          policyName: Laborum voluptas dolorem aut accusantium in dolor.
                          rego: Possimus eveniet cupiditate qui quo tenetur.
                          repository: Qui optio nobis iure rerum non cumque.
                          version: Voluptates sed ea et ad.
            example:
                policies:
                    - data: Enim adipisci error et sunt maxime aperiam.
                      dataConfig: Et sit qui fugit enim labore.
                      group: Deserunt voluptatem.
                      lastUpdate: 1267958255738368405
                      locked: false
                      policyName: Laborum voluptas dolorem aut accusantium in dolor.
                      rego: Possimus eveniet cupiditate qui quo tenetur.
                      repository: Qui optio nobis iure rerum non cumque.
                      version: Voluptates sed ea et ad.
                    - data: Enim adipisci error et sunt maxime aperiam.
                      dataConfig: Et sit qui fugit enim labore.
                      group: Deserunt voluptatem.
                      lastUpdate: 1267958255738368405
                      locked: false
                      policyName: Laborum voluptas dolorem aut accusantium in dolor.
                      rego: Possimus eveniet cupiditate qui quo tenetur.
                      repository: Qui optio nobis iure rerum non cumque.
                      version: Voluptates sed ea et ad.
            required:
                - policies
        Policy:
            type: object
            properties:
                data:
                    type: string
                    description: Policy static data.
                    example: Quia impedit.
                dataConfig:
                    type: string
                    description: Policy static data optional configuration.
                    example: In voluptatem provident deleniti repellendus officia ut.
                group:
                    type: string
                    description: Policy group.
                    example: Nemo tenetur.
                lastUpdate:
                    type: integer
                    description: Last update (Unix timestamp).
                    example: 4061688381357669762
                    format: int64
                locked:
                    type: boolean
                    description: Locked specifies if the policy is locked or allowed to execute.
                    example: false
                policyName:
                    type: string
                    description: Policy name.
                    example: Ullam occaecati.
                rego:
                    type: string
                    description: Policy rego source code.
                    example: Ut aliquid pariatur et quo error.
                repository:
                    type: string
                    description: Policy repository.
                    example: Incidunt enim.
                version:
                    type: string
                    description: Policy version.
                    example: Laboriosam dolorum.
            example:
                data: Eaque debitis.
                dataConfig: Ex autem dolor voluptatem.
                group: Voluptas dolores sunt dolorem perspiciatis.
                lastUpdate: 8335593667465936325
                locked: true
                policyName: Id quo consequatur fuga laborum enim.
                rego: Rerum et.
                repository: Mollitia impedit.
                version: Repellat aut reiciendis.
            required:
                - repository
                - group
                - policyName
                - version
                - locked
                - lastUpdate
        SetPolicyAutoImportRequestBody:
            type: object
            properties:
                interval:
                    type: string
                    description: Interval defines the period for automatic bundle import.
                    example: 1h30m
                    minLength: 2
                policyURL:
                    type: string
                    description: PolicyURL defines the address from where a policy bundle will be taken.
                    example: http://simonis.info/denis_herman
                    format: uri
            example:
                interval: 1h30m
                policyURL: http://adams.net/amelia_gleichner
            required:
                - policyURL
                - interval
        SubscribeForPolicyChangeRequestBody:
            type: object
            properties:
                subscriber:
                    type: string
                    description: Name of the subscriber for policy.
                    example: h0r
                    minLength: 3
                    maxLength: 100
                webhook_url:
                    type: string
                    description: Subscriber webhook url.
                    example: http://marks.org/claude
                    format: uri
            example:
                subscriber: ipd
                webhook_url: http://keelingohara.info/adrienne
            required:
                - webhook_url
                - subscriber
tags:
    - name: policy
      description: Policy Service provides evaluation of policies through Open Policy Agent.
    - name: health
      description: Health service provides health check endpoints.
