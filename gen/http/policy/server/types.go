// Code generated by goa v3.7.0, DO NOT EDIT.
//
// policy HTTP server types
//
// Command:
// $ goa gen code.vereign.com/gaiax/tsa/policy/design

package server

import (
	policy "code.vereign.com/gaiax/tsa/policy/gen/policy"
	goa "goa.design/goa/v3/pkg"
)

// EvaluateRequestBody is the type of the "policy" service "Evaluate" endpoint
// HTTP request body.
type EvaluateRequestBody struct {
	// Data passed as input to the policy execution runtime
	Data interface{} `form:"data,omitempty" json:"data,omitempty" xml:"data,omitempty"`
}

// EvaluateResponseBody is the type of the "policy" service "Evaluate" endpoint
// HTTP response body.
type EvaluateResponseBody struct {
	// Arbitrary JSON response.
	Result interface{} `form:"result" json:"result" xml:"result"`
}

// NewEvaluateResponseBody builds the HTTP response body from the result of the
// "Evaluate" endpoint of the "policy" service.
func NewEvaluateResponseBody(res *policy.EvaluateResult) *EvaluateResponseBody {
	body := &EvaluateResponseBody{
		Result: res.Result,
	}
	return body
}

// NewEvaluateRequest builds a policy service Evaluate endpoint payload.
func NewEvaluateRequest(body *EvaluateRequestBody, group string, policyName string, version string) *policy.EvaluateRequest {
	v := &policy.EvaluateRequest{
		Data: body.Data,
	}
	v.Group = group
	v.PolicyName = policyName
	v.Version = version

	return v
}

// NewLockRequest builds a policy service Lock endpoint payload.
func NewLockRequest(group string, policyName string, version string) *policy.LockRequest {
	v := &policy.LockRequest{}
	v.Group = group
	v.PolicyName = policyName
	v.Version = version

	return v
}

// NewUnlockRequest builds a policy service Unlock endpoint payload.
func NewUnlockRequest(group string, policyName string, version string) *policy.UnlockRequest {
	v := &policy.UnlockRequest{}
	v.Group = group
	v.PolicyName = policyName
	v.Version = version

	return v
}

// ValidateEvaluateRequestBody runs the validations defined on
// EvaluateRequestBody
func ValidateEvaluateRequestBody(body *EvaluateRequestBody) (err error) {
	if body.Data == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("data", "body"))
	}
	return
}
