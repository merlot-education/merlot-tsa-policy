// Code generated by goa v3.14.0, DO NOT EDIT.
//
// health HTTP client types
//
// Command:
// $ goa gen gitlab.eclipse.org/eclipse/xfsc/tsa/policy/design

package client

import (
	health "gitlab.eclipse.org/eclipse/xfsc/tsa/policy/gen/health"
	goa "goa.design/goa/v3/pkg"
)

// LivenessResponseBody is the type of the "health" service "Liveness" endpoint
// HTTP response body.
type LivenessResponseBody struct {
	// Service name.
	Service *string `form:"service,omitempty" json:"service,omitempty" xml:"service,omitempty"`
	// Status message.
	Status *string `form:"status,omitempty" json:"status,omitempty" xml:"status,omitempty"`
	// Service runtime version.
	Version *string `form:"version,omitempty" json:"version,omitempty" xml:"version,omitempty"`
}

// ReadinessResponseBody is the type of the "health" service "Readiness"
// endpoint HTTP response body.
type ReadinessResponseBody struct {
	// Service name.
	Service *string `form:"service,omitempty" json:"service,omitempty" xml:"service,omitempty"`
	// Status message.
	Status *string `form:"status,omitempty" json:"status,omitempty" xml:"status,omitempty"`
	// Service runtime version.
	Version *string `form:"version,omitempty" json:"version,omitempty" xml:"version,omitempty"`
}

// NewLivenessHealthResponseOK builds a "health" service "Liveness" endpoint
// result from a HTTP "OK" response.
func NewLivenessHealthResponseOK(body *LivenessResponseBody) *health.HealthResponse {
	v := &health.HealthResponse{
		Service: *body.Service,
		Status:  *body.Status,
		Version: *body.Version,
	}

	return v
}

// NewReadinessHealthResponseOK builds a "health" service "Readiness" endpoint
// result from a HTTP "OK" response.
func NewReadinessHealthResponseOK(body *ReadinessResponseBody) *health.HealthResponse {
	v := &health.HealthResponse{
		Service: *body.Service,
		Status:  *body.Status,
		Version: *body.Version,
	}

	return v
}

// ValidateLivenessResponseBody runs the validations defined on
// LivenessResponseBody
func ValidateLivenessResponseBody(body *LivenessResponseBody) (err error) {
	if body.Service == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("service", "body"))
	}
	if body.Status == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("status", "body"))
	}
	if body.Version == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("version", "body"))
	}
	return
}

// ValidateReadinessResponseBody runs the validations defined on
// ReadinessResponseBody
func ValidateReadinessResponseBody(body *ReadinessResponseBody) (err error) {
	if body.Service == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("service", "body"))
	}
	if body.Status == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("status", "body"))
	}
	if body.Version == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("version", "body"))
	}
	return
}
