// Code generated by goa v3.12.1, DO NOT EDIT.
//
// policy client
//
// Command:
// $ goa gen gitlab.eclipse.org/eclipse/xfsc/tsa/policy/design

package policy

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "policy" service client.
type Client struct {
	EvaluateEndpoint goa.Endpoint
	LockEndpoint     goa.Endpoint
	UnlockEndpoint   goa.Endpoint
}

// NewClient initializes a "policy" service client given the endpoints.
func NewClient(evaluate, lock, unlock goa.Endpoint) *Client {
	return &Client{
		EvaluateEndpoint: evaluate,
		LockEndpoint:     lock,
		UnlockEndpoint:   unlock,
	}
}

// Evaluate calls the "Evaluate" endpoint of the "policy" service.
func (c *Client) Evaluate(ctx context.Context, p *EvaluateRequest) (res *EvaluateResult, err error) {
	var ires any
	ires, err = c.EvaluateEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*EvaluateResult), nil
}

// Lock calls the "Lock" endpoint of the "policy" service.
func (c *Client) Lock(ctx context.Context, p *LockRequest) (err error) {
	_, err = c.LockEndpoint(ctx, p)
	return
}

// Unlock calls the "Unlock" endpoint of the "policy" service.
func (c *Client) Unlock(ctx context.Context, p *UnlockRequest) (err error) {
	_, err = c.UnlockEndpoint(ctx, p)
	return
}
